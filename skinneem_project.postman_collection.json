{
	"info": {
		"_postman_id": "a7a1d438-100f-4dac-80c9-9a447875bc6b",
		"name": "skinneem_project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23508915"
	},
	"item": [
		{
			"name": "auth0 get token wallace",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"grant_type\": \"password\",\r\n    \"username\": \"{{user_email}}\",\r\n    \"password\": \"{{user_password}}\",\r\n    \"client_id\": \"{{client_id}}\",\r\n    \"client_secret\": \"{{client_secret}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{auth0-domain}}/oauth/token",
					"protocol": "https",
					"host": [
						"{{auth0-domain}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "login - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"user_token\", pm.response.json()['id_token'])"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{user_email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{user_password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{app_url}}/login",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "decode - user",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/decode",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"decode"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all libraries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/libraries",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"libraries"
					]
				}
			},
			"response": []
		},
		{
			"name": "post collection - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"user_id1\", pm.response.json()[\"id\"])\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Main\",\r\n    \"capacity\": 100,\r\n    \"last_updated\": \"12-01-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "post collection - no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Main\",\r\n    \"capacity\": 100,\r\n    \"last_updated\": \"12-01-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "post collection - missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Main\",\r\n    \"capacity\": 100,\r\n    \"last_updated\": \"12-01-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "post collection - invalid jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Main\",\r\n    \"capacity\": 100,\r\n    \"last_updated\": \"12-01-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "method not allowed - collections",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "get collections",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "get collections - no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a collection - invalid value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Audio/Visual\",\r\n    \"capacity\": 80\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a collection - extraneous value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Audio/Visual\",\r\n    \"capacity\": 80,\r\n    \"last_updated\": \"12-01-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a collection - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Audio/Visual\",\r\n    \"capacity\": 80\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections/1",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a collection - no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Audio/Visual\",\r\n    \"capacity\": 80\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put a collection - invalid value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Audio/Visual\",\r\n    \"capacity\": 80,\r\n    \"last_updated\": \"12-22-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put a collection - extraneous value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Audio/Visual\",\r\n    \"capacity\": 80,\r\n    \"last_updated\": \"12-22-2022\",\r\n    \"release_date\": \"12-01-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put a collection - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Audio/Visual\",\r\n    \"capacity\": 80,\r\n    \"last_updated\": \"12-02-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections/1",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "put a collection - no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Audio/Visual\",\r\n    \"capacity\": 80\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "post media - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"user_id2\", pm.response.json()[\"id\"])\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring\",\r\n    \"type\": \"Novel\",\r\n    \"release_date\": \"11-29-1954\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "post media - no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"The Two Towers\",\r\n    \"type\": \"Novel\",\r\n    \"release_date\": \"12-29-1955\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "post media - missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Return of the King\",\r\n    \"type\": \"Novel\",\r\n    \"release_date\": \"08-31-1956\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "post media - invalid jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Return of the King\",\r\n    \"type\": \"Novel\",\r\n    \"release_date\": \"08-31-1956\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "method not allowed - media",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "get media",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "get media - no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a media - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring 2\",\r\n    \"type\": \"Audiobook\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a media - extraneous value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring\",\r\n    \"type\": \"Novel\",\r\n    \"release_date\": \"11-29-1954\",\r\n    \"last_updated\": \"02-17-2005\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a media - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring\",\r\n    \"type\": \"Novel\",\r\n    \"release_date\": \"11-29-1954\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media/1",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a media - no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring 3\",\r\n    \"type\": \"Video Game\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put a media - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"303 status code\", function () {\r",
							"    pm.response.to.have.status(303);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring 4\",\r\n    \"type\": \"Movie\",\r\n    \"release_date\": \"12-01-2001\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put a media - extraneous value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring 4\",\r\n    \"type\": \"Movie\",\r\n    \"release_date\": \"12-01-2001\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put a media - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring 4\",\r\n    \"type\": \"Movie\",\r\n    \"release_date\": \"12-01-2001\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media/1",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "put a media - no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"303 status code\", function () {\r",
							"    pm.response.to.have.status(303);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring 5\",\r\n    \"type\": \"Video Game\",\r\n    \"release_date\": \"08-09-2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add media to collection - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}",
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove media from collection - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}",
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "post duplicate collection - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fellowship of the Ring\",\r\n    \"type\": \"Novel\",\r\n    \"release_date\": \"11-29-1954\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "post duplicate media - user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Main\",\r\n    \"capacity\": 100,\r\n    \"last_updated\": \"12-01-2022\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "get collections - wrong accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/collections",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections"
					]
				}
			},
			"response": []
		},
		{
			"name": "get media - wrong accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/media",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete media - invalid id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 no content\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/media/1",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete media - valid id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 no content\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/media/{{user_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"media",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete collection - invalid id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 no content\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/collections/1",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete collection - valid id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 no content\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/collections/{{user_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"collections",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		}
	]
}